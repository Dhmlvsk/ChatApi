// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reenbit_Chat.Models;

namespace Reenbit_Chat.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200630111152_ChatRepo")]
    partial class ChatRepo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatName = "Chat_1"
                        },
                        new
                        {
                            Id = 2,
                            ChatName = "Chat_2"
                        },
                        new
                        {
                            Id = 3,
                            ChatName = "Chat_3"
                        },
                        new
                        {
                            Id = 4,
                            ChatName = "Chat_4"
                        });
                });

            modelBuilder.Entity("Domain.ChatUser", b =>
                {
                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatId", "UserId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ChatUsers");

                    b.HasData(
                        new
                        {
                            ChatId = 1,
                            UserId = 1
                        },
                        new
                        {
                            ChatId = 1,
                            UserId = 2
                        },
                        new
                        {
                            ChatId = 2,
                            UserId = 1
                        },
                        new
                        {
                            ChatId = 2,
                            UserId = 2
                        },
                        new
                        {
                            ChatId = 2,
                            UserId = 3
                        },
                        new
                        {
                            ChatId = 2,
                            UserId = 4
                        },
                        new
                        {
                            ChatId = 3,
                            UserId = 5
                        },
                        new
                        {
                            ChatId = 3,
                            UserId = 6
                        },
                        new
                        {
                            ChatId = 3,
                            UserId = 7
                        },
                        new
                        {
                            ChatId = 3,
                            UserId = 8
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 1
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 2
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 3
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 4
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 5
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 6
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 7
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 8
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 9
                        },
                        new
                        {
                            ChatId = 4,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Domain.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 1,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 1,
                            Text = "User_1 message_1"
                        },
                        new
                        {
                            Id = 2,
                            ChatId = 1,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 2,
                            Text = "User_2 message_2"
                        },
                        new
                        {
                            Id = 3,
                            ChatId = 2,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 3,
                            Text = "User_3 message_3"
                        },
                        new
                        {
                            Id = 4,
                            ChatId = 2,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 4,
                            Text = "User_4 message_4"
                        },
                        new
                        {
                            Id = 5,
                            ChatId = 3,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 5,
                            Text = "User_5 message_5"
                        },
                        new
                        {
                            Id = 6,
                            ChatId = 3,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 6,
                            Text = "User_6 message_6"
                        },
                        new
                        {
                            Id = 7,
                            ChatId = 3,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 7,
                            Text = "User_7 message_7"
                        },
                        new
                        {
                            Id = 8,
                            ChatId = 4,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 1,
                            Text = "User_1 message_8"
                        },
                        new
                        {
                            Id = 9,
                            ChatId = 4,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 8,
                            Text = "User_8 message_9"
                        },
                        new
                        {
                            Id = 10,
                            ChatId = 4,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 9,
                            Text = "User_9 message_10"
                        },
                        new
                        {
                            Id = 11,
                            ChatId = 4,
                            DateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SenderId = 10,
                            Text = "User_10 message_11"
                        });
                });

            modelBuilder.Entity("Domain.MessageUser", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId", "UserId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("UserId");

                    b.ToTable("MessageUsers");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 1,
                            UserId = 2
                        },
                        new
                        {
                            MessageId = 2,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 2,
                            UserId = 2
                        },
                        new
                        {
                            MessageId = 3,
                            UserId = 3
                        },
                        new
                        {
                            MessageId = 3,
                            UserId = 4
                        },
                        new
                        {
                            MessageId = 4,
                            UserId = 3
                        },
                        new
                        {
                            MessageId = 4,
                            UserId = 4
                        },
                        new
                        {
                            MessageId = 5,
                            UserId = 5
                        },
                        new
                        {
                            MessageId = 5,
                            UserId = 6
                        },
                        new
                        {
                            MessageId = 5,
                            UserId = 7
                        },
                        new
                        {
                            MessageId = 6,
                            UserId = 5
                        },
                        new
                        {
                            MessageId = 6,
                            UserId = 6
                        },
                        new
                        {
                            MessageId = 6,
                            UserId = 7
                        },
                        new
                        {
                            MessageId = 7,
                            UserId = 5
                        },
                        new
                        {
                            MessageId = 7,
                            UserId = 6
                        },
                        new
                        {
                            MessageId = 7,
                            UserId = 7
                        },
                        new
                        {
                            MessageId = 8,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 8,
                            UserId = 8
                        },
                        new
                        {
                            MessageId = 8,
                            UserId = 9
                        },
                        new
                        {
                            MessageId = 8,
                            UserId = 10
                        },
                        new
                        {
                            MessageId = 9,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 9,
                            UserId = 8
                        },
                        new
                        {
                            MessageId = 9,
                            UserId = 9
                        },
                        new
                        {
                            MessageId = 9,
                            UserId = 10
                        },
                        new
                        {
                            MessageId = 10,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 10,
                            UserId = 8
                        },
                        new
                        {
                            MessageId = 10,
                            UserId = 9
                        },
                        new
                        {
                            MessageId = 10,
                            UserId = 10
                        },
                        new
                        {
                            MessageId = 11,
                            UserId = 1
                        },
                        new
                        {
                            MessageId = 11,
                            UserId = 8
                        },
                        new
                        {
                            MessageId = 11,
                            UserId = 9
                        },
                        new
                        {
                            MessageId = 11,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User_1",
                            Password = "1111",
                            Role = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User_2",
                            Password = "2222",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User_3",
                            Password = "3333",
                            Role = "User"
                        },
                        new
                        {
                            Id = 4,
                            Name = "User_4",
                            Password = "4444",
                            Role = "User"
                        },
                        new
                        {
                            Id = 5,
                            Name = "User_5",
                            Password = "5555",
                            Role = "User"
                        },
                        new
                        {
                            Id = 6,
                            Name = "User_6",
                            Password = "6666",
                            Role = "User"
                        },
                        new
                        {
                            Id = 7,
                            Name = "User_7",
                            Password = "7777",
                            Role = "User"
                        },
                        new
                        {
                            Id = 8,
                            Name = "User_8",
                            Password = "8888",
                            Role = "User"
                        },
                        new
                        {
                            Id = 9,
                            Name = "User_9",
                            Password = "9999",
                            Role = "User"
                        },
                        new
                        {
                            Id = 10,
                            Name = "User_10",
                            Password = "0000",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("Domain.ChatUser", b =>
                {
                    b.HasOne("Domain.Chat", null)
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Message", b =>
                {
                    b.HasOne("Domain.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.MessageUser", b =>
                {
                    b.HasOne("Domain.Message", null)
                        .WithMany("MessageUsers")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
